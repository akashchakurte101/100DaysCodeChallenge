public class MaxPQ{
    private static int[] heap;
    private int n;

    public MaxPQ(int capacity){
        heap=new int[capacity+1];
        n=0;
    }
    public boolean isEmpty(){
        return n==0;
    }
    public int size(){
        return n;
    }
    public void resize(int capacity){
        int[] temp=new int[capacity];
        for(int i=1; i<=capacity; i++){
            temp[i]=heap[i];
        }
        heap=temp;
    }
    public void insert(int x){
        if(n==heap.length-1){
            resize(2*heap.length);
        }
        heap[n]=x;
        swim(n);
        n++;
    }
    public void swim(int k){
        while(k>1 && heap[k/2] < heap[k]){
           int temp=heap[k];
           heap[k]=heap[k/2];
           heap[k/2]=temp;
           k=k/2;
        }
    }

    public static void main(String[] args) {
        MaxPQ m=new MaxPQ(3);
//        System.out.println(m.isEmpty());
//        System.out.println(m.size());
        m.insert(10);
        m.insert(20);
        m.insert(30);
        System.out.println(heap[1]);
    }

}
