import java.util.List;

public class MergeTwoSortedList  {
    private ListNode head;
    private int length;
    private  class ListNode{
        private int data;
        private ListNode next;
        public ListNode(int data){
            this.data=data;
            this.next=null;
        }

    }
    public boolean isEmpty(){
        return length==0;
    }
    public void add(int value){
        ListNode newNode=new ListNode(value);
        if(isEmpty()){
            head=newNode;
        }else{
               ListNode current=head;
               while(current.next!=null){
                   current=current.next;
               }
               current.next=newNode;
        }
        length++;
    }
    public void display(){
        ListNode current=head;
        while(current!=null){
            System.out.print(current.data+"-->");
            current=current.next;
        }
        System.out.print("null");
    }
    public ListNode merge(ListNode a,ListNode b){
        ListNode dummy=new ListNode(0);
        ListNode tail=dummy;
        while(a!=null && b!=null){
            if(a.data<b.data){
                tail.next=a;
                a=a.next;
            }else{
                tail.next=b;
                b=b.next;
            }
            tail=tail.next;
        }
        if(a==null){
            tail.next=b;
        }else{
            tail.next=a;
        }
       return dummy.next;
    }
    public static void main(String[] args) {
        MergeTwoSortedList mll1=new MergeTwoSortedList();
        mll1.add(10);
        mll1.add(20);
        mll1.add(30);
       // mll1.display();

        MergeTwoSortedList mll2=new MergeTwoSortedList();
        mll2.add(15);
        mll2.add(25);
        mll2.add(35);
        mll2.add(40);
       // mll1.display();
        MergeTwoSortedList result=new MergeTwoSortedList();
        result.head=mll1.merge(mll1.head,mll2.head);
        result.display();
    }
}
